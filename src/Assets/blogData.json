[
  {
    "id": 1,
    "title": "A Comprehensive Guide to JavaScript: Variables, Arrays, Objects & more",
    "imgUrl": "/Assets/Images/Blog/js-01.png",
    "tags": "javascript",
    "time": "5 mins to read",
    "date": "Nov 2, 2020",
    "link": "a-comprehensive-guide-to-javaScript-variables-arrays-object-more",
    "details": "<p class=\"paragraph\">At the very first age, JavaScript was called LiveScript. An engineer named Brendan Eich has created JavaScript in 1995. There was a little confusion about the name with Java and JavaScript. After several months Microsoft released JScript with Internet Explorer 3. After that Netscape submitted JavaScript to Ecma International. In 1999 ECMAScript edition 3 launched and it has stayed pretty much stable ever since.</p><p>&nbsp;</p><p  class=\"paragraph\"><strong class=\"strong\">An Overview of JavaScript:</strong></p><p  class=\"paragraph\">JavaScript is a dynamic language with many type, operators, objects, and methods. JavaScripts&rsquo; syntax is inspired by Java And C language. A programmer can work with object prototypes, instead of classes and that&rsquo;s why JavaScript supports OOP. And Lastly JavaScript also supports functional programming. JavaScripts&rsquo; type diagram looks more like this:</p><ol><li  class=\"list\">Number</li><li  class=\"list\">String</li><li  class=\"list\">Boolean</li><li  class=\"list\">Object</li><li  class=\"list\">Symbol</li><li  class=\"list\">Undefined</li><li  class=\"list\">Null.</li></ol><p  class=\"paragraph\"><strong class=\"strong\">Variable:</strong></p><p  class=\"paragraph\">In JavaScript, we can declare a variable by using these three keywords.</p>    <ol><li  class=\"list\">let</li><li  class=\"list\">var</li><li  class=\"list\">const</li></ol><p  class=\"paragraph\">When you using the&nbsp;<strong class=\"strong\">&lsquo;&rsquo;let&rsquo;&rsquo;</strong>&nbsp;keyword it allows you to declare block-level variables. And the value of this variable can be changed.</p><p  class=\"paragraph\"><strong class=\"strong\">&ldquo;const&rdquo;</strong>&nbsp;allows you to declare variables you cant change. The variable is available from the block it is declared in.</p><p  class=\"paragraph\">And now the most commonly used variable is&nbsp;<strong class=\"strong\">&ldquo;var&rdquo;.&nbsp;</strong>This variable has no restrictions like the other two. This variable is available from the function where it is declared in.</p> <p  class=\"paragraph\"><strong class=\"strong\">Operators:</strong></p> <p  class=\"paragraph\"><strong class=\"strong\">&ldquo;+, -, *, /&rdquo;&nbsp;</strong>this is are JavaScripts&rsquo; numerical operators. We use&nbsp;<strong class=\"strong\">&lsquo;&rsquo;=&rsquo;&rsquo;&nbsp;</strong>this for assigning values. In srting and number if we need to compare between something we can use&nbsp;<strong class=\"strong\">&ldquo;&lt;, &gt;, &lt;=, &gt;=&rdquo;.&nbsp;</strong>Last but not least&nbsp;<strong class=\"strong\">&ldquo;!= !==&rdquo;&nbsp;</strong>this is are also some operators in JavaScript.</p><p  class=\"paragraph\"><strong class=\"strong\">Control Structures:</strong></p> <p  class=\"paragraph\">If you have any idea about the control structures of C language, then you will already know about the control structures of JavaScript also. Because there are some similarities between C and JavaScript.</p> <p  class=\"paragraph\"><strong class=\"strong\">&ldquo;if-else&rdquo;&nbsp;</strong>conditionals can be used in JavaScript. You want to print a age message and you set if age is less than 10, print a message &ldquo;child&rdquo; message, if not, but age is less than 20, print a &ldquo;adult&rdquo; message, otherwise a &ldquo;old&rdquo;:</p> <img src=\"/Assets/Images/Blog/if-else.png\" style=\"max-width:462px; width:100%\"><p  class=\"paragraph\">JavaScript has&nbsp;<strong class=\"strong\">&ldquo;while-do while&rdquo;&nbsp;</strong>loop. When you want a basic looping then use the first one, otherwise use the second one.</p>    <img src=\"/Assets/Images/Blog/while-loop.png\" style=\"max-width:462px; width:100%\"> <p  class=\"paragraph\">this code will run the loop over and over again. when the value of i=10 then it will stop.</p> <img src=\"/Assets/Images/Blog/loop.png\" style=\"max-width:462px; width:100%\">    <p  class=\"paragraph\">In JavaScript, you can use the&nbsp;<strong class=\"strong\">&ldquo;for&rdquo;&nbsp;</strong>loop also. and again this for loop are similar to C language.</p>    <img src=\"/Assets/Images/Blog/for-loop.png\" style=\"max-width:462px; width:100%\">    <p  class=\"paragraph\">JavaScript has Switch and Break statement.</p>    <p  class=\"paragraph\"><strong class=\"strong\">String:</strong></p>    <p  class=\"paragraph\">When you want to store data in text form, then use&nbsp;<strong class=\"strong\">&ldquo;String&rdquo;</strong>. Like array we can use the length property to find the length of a string. String literals can be specified using single or double-quotes.</p>    <p  class=\"paragraph\">Some Useful method is String:</p>    <p  class=\"paragraph\"><strong class=\"strong\">&lsquo;charAt&rsquo;</strong>&nbsp;method is used to access an individual character in a string.</p>    <p  class=\"paragraph\"><strong class=\"strong\">&ldquo;concat</strong>&rdquo; method is used to combine the text between two string.</p>    <p  class=\"paragraph\"><strong class=\"strong\">&ldquo;indexOf</strong>&rdquo; method is used to return the index within the string.</p>    <p  class=\"paragraph\"><strong class=\"strong\">&ldquo;endsWith</strong>&rdquo; method is used to find where the string ends.</p>    <p  class=\"paragraph\"><strong class=\"strong\">&ldquo;slice</strong>&rdquo; method is used to Extracts a section of a string and returns a new string.</p>    <p  class=\"paragraph\"><strong class=\"strong\">&ldquo;toUppercase</strong>&rdquo; method is used to Returns the calling string value converted to uppercase.</p>    <p  class=\"paragraph\"><strong class=\"strong\">Number:</strong></p>    <p  class=\"paragraph\">JavaScript numbers can be written with or without decimals. In other programming languages, there are different types of numbers, like integers, short, long, floating-point, etc. But JavaScript does not define different types of numbers. Following the international IEEE 754 standard, JavaScript numbers are always stored as ouble-precision floating-point numbers. JavaScript number are always 64-bit floating-point.</p>    <p  class=\"paragraph\">Some Static method of JavaScript Number</p>    <p  class=\"paragraph\"><strong class=\"strong\">&ldquo;isNaN&rdquo;&nbsp;</strong>means is Not a Number. Determine whether the passed value is NaN.</p>    <p  class=\"paragraph\">The &ldquo;<strong class=\"strong\">parseFloat</strong>&rdquo; function parses a string and returns a floating-point number. and &ldquo;<strong class=\"strong\">parseInt</strong>&rdquo; function parses a string and returns an interger point number.</p>    <p  class=\"paragraph\"><strong class=\"strong\">Math:</strong></p>    <p  class=\"paragraph\"><strong class=\"strong\">&ldquo;math&rdquo;&nbsp;</strong>object allows you to perform mathematical tasks. It works with a number, not with BigInt.</p>    <p  class=\"paragraph\">It&rsquo;s not a constructor. All properties and methods are static in a math object.</p>    <p  class=\"paragraph\">Some important methods are,</p>    <p  class=\"paragraph\"><strong class=\"strong\">math.floor&nbsp;</strong>is returning the largest integer less than or equal number.</p>    <p  class=\"paragraph\"><strong class=\"strong\">math.ceil&nbsp;</strong>is returning the largest integer greater than or equal number.</p>    <p  class=\"paragraph\"><strong class=\"strong\">math.random&nbsp;</strong>is the returning random number.</p>    <p  class=\"paragraph\"><strong class=\"strong\">math.round&nbsp;</strong>is the returning the nearest number of an integer.</p>    <p  class=\"paragraph\"><strong class=\"strong\">math.sqrt&nbsp;</strong>is the returning square root of a number.</p> <p  class=\"paragraph\"><strong class=\"strong\">math.min&nbsp;</strong>is the returning smallest number of zero and&nbsp;<strong class=\"strong\">math.max&nbsp;</strong>is the returning biggest number of zero.</p>"
  },
  {
    "id": 2,
    "title": "A Beginner's Guide to JavaScript: Understanding Coding Style",
    "imgUrl": "/Assets/Images/Blog/js-02.png",
    "tags": "javascript",
    "time": "4 mins to read",
    "date": "Nov 3, 2020",
    "link": "a-beginner's-guide-to-javaScript-understanding-coding-style",
    "details": "<p class=\"paragraph\">Every language has some primitives types. And JavaScript also has some. There are six primitives types in JS.</p><ol><li  class=\"list\">String</li><li  class=\"list\">Number</li><li  class=\"list\">Undefined</li><li  class=\"list\">Null</li><li  class=\"list\">Boolean</li><li  class=\"list\">Symbol</li></ol><p  class=\"paragraph\">That’s important to know about the primitives types. Because it helps a lot to understand the language.</p><img src=\"/Assets/Images/Blog/guide-to-javascript/first.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\"><strong class=\"strong\">Expressions</strong></p><p class=\"paragraph\">JavaScript&rsquo;s language syntax recognizes expressions and statements. Both are different and we should need to know the basic difference.<br>An expression is a code that evaluates the value and a statemnet is a code that performs</p><img src=\"/Assets/Images/Blog/guide-to-javascript/second.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\"><strong class=\"strong\">Checking a type of value:</strong></p><p class=\"paragraph\">: Who are you?</p><p class=\"paragraph\">:: My name is Bond. James Bond.</p><p class=\"paragraph\">If you ask you will get an answer. Just you need to ask. JavaScript is a good boy. If you ask him &ldquo;What type of value is that?&rdquo;. He will give you the answer. Just you need to know how to ask. So, we will use Expressions called typeof. And obviously, he will give you the answer.</p><img src=\"/Assets/Images/Blog/guide-to-javascript/third.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\"><strong class=\"strong\">Error Handling:</strong></p><p class=\"paragraph\">:: &ldquo;I&rsquo;m not a robot&rdquo;.</p><p class=\"paragraph\">This is the most annoying exam to prove that I&rsquo;m a human being. So I&rsquo;m a human being. I make mistakes. Sometimes I find those mistakes and try to solve it. But When I&rsquo;m a programmer, maybe I make mistakes, but every time I need to find it and solve it. In JavaScript, Mr. Finder will help us to find the error.&nbsp;<strong class=\"strong\">try..catch&nbsp;</strong>our Mr.Finder in JavaScript. By using this syntax the error can be handle.</p><img src=\"/Assets/Images/Blog/guide-to-javascript/fourth.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\">try will run the code, if there is no error then catch block will ignore otherwise catch block will execute.Some note about&nbsp;<strong class=\"strong\">try..catch</strong></p><ol><li  class=\"list\">This will work only when the script is valid.</li><li  class=\"list\">This syntax must be used inside a function</li></ol><p class=\"paragraph\"><strong class=\"strong\">Coding Style:</strong></p><p class=\"paragraph\">A beautiful road can help you to walk a mile. A beautiful environment can make your mind fresh. An organized table can increase your learning willing. Beautification is everything.</p><p class=\"paragraph\">Beautification in programming is also important. When we write a code we need to try to make it clear, fresh. There are no fixed rules to maintain the way to beautify a code. But if we follow some steps and ideas that can help another programmer to understand the functionality.</p><ol><li  class=\"list\">No space between the function name and parentheses between the parentheses and the parameter.</li> <li  class=\"list\">A space between parameters</li> <li  class=\"list\">Curly brace { } on the same line, after space.</li> <li  class=\"list\">Indentation 2 space for the new line after the function</li> <li  class=\"list\">Space after statement</li><li  class=\"list\">Use semicolon is mandatory</li><li  class=\"list\">An empty line between logical blocks</li> <li  class=\"list\">Spaces around a nested call</li></ol> <p class=\"paragraph\"><strong class=\"strong\">Comments in code:</strong></p><p class=\"paragraph\">Imagine yourself in an area without a nameplate, without holding, without a location card. How do you feel? No good.</p><p class=\"paragraph\">Or imagine that you write 1000 lines of code the whole night, and after that night when you open your code you don&rsquo;t know which function is used for what operation.</p><p class=\"paragraph\">Or imagine your junior developer messaged you to help him out from an error in his code. But when you open the code you cant understand that what is used for what operation.</p><p class=\"paragraph\">So, what is the solution?&nbsp;<strong class=\"strong\">Comments.&nbsp;</strong>Basically, comments use to describe how and why the code works. how to comment? when we comment a single line it starting with // and for multiline we use this /* &hellip; */. Keyboard shortcuts&nbsp;<strong class=\"strong\">ctrl+/</strong></p><p class=\"paragraph\"><strong class=\"strong\">ECMAScript or ES6</strong></p>  <p class=\"paragraph\">ES6 alludes to form 6 of the ECMA Script programming language. ECMA Script is the normalized name for JavaScript. It was released in 2011. it represents a scripting language specification called ECMAScript.</p> <p class=\"paragraph\">After ES6 is released we can declare the variable with&nbsp;<strong class=\"strong\">let&nbsp;</strong>or&nbsp;<strong class=\"strong\">const. const</strong>&nbsp;are values that can be characterized just a single time. And&nbsp;<strong class=\"strong\">let&nbsp;</strong>is work like&nbsp;<strong class=\"strong\">var</strong>.</p> <p class=\"paragraph\">const pi= 3.1416; //constant</p>  <p class=\"paragraph\">let x = &lsquo;&ldquo;hello&rdquo;;</p><p class=\"paragraph\"><strong class=\"strong\">Arrow Function in ES6:</strong></p><p class=\"paragraph\">ES6 introduced arrow function in JS. For a lot of opportunity I personally like the new feature of ES6 is arrow function. There are two significant advantages of utilizing Arrow functions. One is that it&rsquo;s a more limited syntax and hence requires less code. It cant be used in all situation.</p><img src=\"/Assets/Images/Blog/guide-to-javascript/sixth.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\"><strong class=\"strong\">How JavaScript Run</strong></p><p class=\"paragraph\">JavaScript is what is known as a Client-side Scripting Language. That implies that it is a PC programming language that runs inside an Internet program. The manner in which JavaScript works is interesting. Inside a typical Web page you place some JavaScript code . At the point when the program stacks the page, the program has a built-in interpreter that peruses the JavaScript code it finds in the page and runs it.</p><p class=\"paragraph\">JavaScript is divided into two memory in it</p><ol><li  class=\"list\">Heap Memory,</li><li  class=\"list\">Stack Memory</li></ol><p class=\"paragraph\">Memory Heap is where the memory allocation happens. Call Stack is where your stack frames are as your code executes</p>"
  },
  {
    "id": 3,
    "title": "An Overview of React: A JavaScript User Interface Library",
    "imgUrl": "/Assets/Images/Blog/react.png",
    "tags": "react",
    "time": "4 mins to read",
    "date": "Nov 4, 2020",
    "link": "an-overview-of-react-a-javaScript-user-interface-library",
    "details": "<p class=\"paragraph\">Facebook recently launched their new interface. Which is nice and attractive. As a user, I think it&rsquo;s good. Because ultimately user experience is the main priority for web designers or web developers. Why we are talking about Facebook???</p><p class=\"paragraph\">React is created by Facebook. And React is a User Interface library. Many of us are confused about the library and framework. Just set it to your mind that React is a Library, not Framework.</p> <p class=\"paragraph\">Now make it clear that what is Library and what is Framework!!</p><img src=\"/Assets/Images/Blog/start-react/lvF.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\"><strong class=\"strong\">Library&nbsp;</strong>is a set of reusable functions used by a computer program. And&nbsp;<strong class=\"strong\">Framework&nbsp;</strong>is a piece of code that builds the architect of your project. You can call your library but your framework can call you.</p> <p class=\"paragraph\">ReactJS is a Library of JavaScript and AngularJS is a framework of JavaScript.</p> <p class=\"paragraph\"><strong class=\"strong\">What is JSX?</strong></p> <p class=\"paragraph\">const element = &lt;h1&gt;Hello, React!&lt;/h1&gt;;</p> <p class=\"paragraph\">Wait a sec!! what is that? Using HTML tag line in a variable? Yes!!! This funny but useful thing is called JSX. JSX stands for JavaScript XML. React doesn&rsquo;t need utilizing JSX, yet a great many people think that it&rsquo;s supportive as a visual guide when working with UI inside the JavaScript code. It likewise permits React to show more valuable error and warning messages. Understand that thing with an example.</p> <p class=\"paragraph\">We declare a variable called message and then use it inside JSX by wrapping it in curly braces:</p><p class=\"paragraph\">const message = &ldquo;Hello, React! &ldquo;;<br>const element = &lt;h1&gt; {message }&lt;/h1&gt;;</p> <p class=\"paragraph\"><strong class=\"strong\">VDOM(Virtual DOM)</strong></p>  <p class=\"paragraph\">Before going to VDOM, let&rsquo;s talk about DOM. DOM means Document Object Model. When a web page is loaded, the browser makes a&nbsp;<strong class=\"strong\">D</strong>ocument&nbsp;<strong class=\"strong\">O</strong>bject&nbsp;<strong class=\"strong\">M</strong>odel of the page.</p> <img src=\"/Assets/Images/Blog/start-react/dom.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\">A Web page is a document. This document can be either shown in the program window or as the HTML source. Be that as it may, it is a similar document in the two cases. The Document Object Model (DOM) speaks to that equivalent document so it tends to be controlled. The DOM is an object-situated portrayal of the site page, which can be altered with a scripting language, for example, JavaScript.</p>  <p class=\"paragraph\">DOM control is the core of the advanced, intuitive web. It is slower than most JavaScript activities. To address this issue, the individuals at React promoted something many refer to as the virtual DOM.</p><p class=\"paragraph\">How does it work? When JSX render every single virtual DOM object gets updated. When the virtual DOM has been updated, then React compares the virtual DOM with a virtual DOM which one is previously-stored before the update. Comparing between new virtual DOM with a pre-update version, React figures out<em class=\"ack\">&nbsp;</em>which virtual DOM objects have changed. This process is called &ldquo;diffing.&rdquo;</p><img src=\"/Assets/Images/Blog/start-react/vdom.png\" style=\"max-width:462px; width:100%\"> <p class=\"paragraph\"><strong class=\"strong\">Some Fact About React</strong></p><ol><li class=\"list\">It&rsquo;s not a framework# React is not a framework, Its a library of JavaScript</li><li class=\"list\">Its JavaScript# To generate markup dynamically in React you also use JS.</li><li class=\"list\">JSX# You can simplify your code with JSX</li><li class=\"list\">Declarative # In React you use declarative style to write your components</li> <li class=\"list\">State# We talk about static data passed down the components tree. But we can use Stateful components.</li></ol> <p class=\"paragraph\"><strong class=\"strong\">How To install React?</strong></p> <p class=\"paragraph\">Start a project with React is actually very easy. Just execute some command in command promote or VS code terminal. If we want we can create a project file. Then if you want to create a project with VS code follows the steps:</p> <ol> <li class=\"list\">Open VS code</li> <li class=\"list\">Select the &ldquo;File&rdquo; option from the menu bar.</li><li class=\"list\">Select the &ldquo;Open Folder&rdquo; option from File.</li> <li class=\"list\">Create a folder or if you already create a folder then click and open it.</li> <li class=\"list\">Open Terminal</li> <li class=\"list\">In terminal write-&nbsp;<strong class=\"strong\">npx create-react-app my-app</strong>(app name here instead of my-app) it will take some time to prepare.</li>  <li class=\"list\">Go through the created React project folder. Type&nbsp;<strong class=\"strong\">cd &lt;folder name&gt;&nbsp;</strong>and enter.</li><li class=\"list\">After completing this step just go to the created folder and type in terminal&nbsp;<strong class=\"strong\">npm start</strong></li><li class=\"list\">It will open in your browser with&nbsp; https://localhost.3000 </li></ol> <p class=\"paragraph\">The basic configuration is ready to explore now.</p> <p class=\"paragraph\"><strong class=\"strong\">Optimizing Performance</strong></p><p class=\"paragraph\">Sometimes you face some problems like the web page work slowly or render data slowly. In that case, we need to optimize our performance. React. React uses several clever techniques to minimize the number of costly DOM operations required to update the UI.</p><ol> <li class=\"list\">Use production build</li><li class=\"list\">Use&nbsp;<strong class=\"strong\">npm run build</strong></li> <li class=\"list\">Single file build</li> <li class=\"list\">Install the&nbsp;<strong class=\"strong\">terser-brunch</strong>&nbsp;plugin</li><li class=\"list\">Rollup production build</li> </ol> <p class=\"paragraph\"><strong class=\"strong\">Context</strong></p> <p class=\"paragraph\">In an app maybe we need to pass data from one component to another. This can be awkward for specific kinds of props that are needed by numerous segments inside an application. But Context makes this work easy. Context gives an approach to share esteems like these between components without having to expressly go a prop through each level of the tree.</p> <p class=\"paragraph\"><strong class=\"strong\">Handle Event</strong></p> <p class=\"paragraph\">On a web page, we see many types of user interaction, like mouse hover, mouse click, keyboard enter, and others. The handling event on DOM and Handling event on React is quite similar. But there is some syntax difference in react handling.</p><ol> <li class=\"list\">Using camelCase, rather than lowercase in react.</li> <li class=\"list\">Pass a function as an event handler.</li></ol><p class=\"paragraph\">&lt;button onClick={clickHandler}&gt;</p> <p class=\"paragraph\">Click on me &lt;/button&gt;</p> <p class=\"paragraph\"><strong class=\"strong\">React Hook</strong></p> <p class=\"paragraph\">In React 16.8 Hook introduces. It&rsquo;s very useful for development. Hooks unravel a wide assortment of apparently detached issues in React. It&rsquo;s difficult to reuse stateful logic between components. But React allows you to reuse stateful logic without changing your components. React allows you to use more of React&rsquo;s features without using too many classes. Hooks are capacities that let you &ldquo;hook into&rdquo; React state and lifecycle highlights from work components. State Hook and Effect Hook are very useful hooks.</p> <p class=\"paragraph\"><strong class=\"strong\">Hook rules</strong></p><p class=\"paragraph\">Hooks are JavaScript functions, yet you have to keep two principles when utilizing them.</p><ol> <li class=\"list\">Only Call Hook at the top level.</li><li class=\"list\">Only Call Hook from React function.</li> </ol>"
  },
  {
    "id": 4,
    "title": "Beginner-Level JavaScript Programming Exercises and Solutions",
    "imgUrl": "/Assets/Images/Blog/js-03.png",
    "tags": "javascript",
    "time": "4 mins to read",
    "date": "Nov 5, 2020",
    "link": "beginner-Level-javaScript-programming-exercises-and-solutions",
    "details": "<p class=\"paragraph\">I try to solve some beginner level problem using JavaScript. Just for practice. We will use some basic mathematical calculations, some JavaScript Math object, and loop.</p><strong class=\"strong\">1.Ludo Dice</strong> <p class=\"paragraph\">In the 6th century in India Ludo was created. We don&rsquo;t gonna make a Ludo game system. In this game, the player decided on their next step using a six side number dice. Dice is using to pick a random number from 1 to 6. So we will generate a number between 1 to 6 using JavaScript.</p> <p class=\"paragraph\">First of all I take a variable named &ldquo;dice&rdquo;. And then I use two JavaScript Math object. Math.round and Math.random.</p><p class=\"paragraph\">#Math.random will generate a random number. And then multiplied 6 with the generated random number. It will fixed the number range to 1&ndash;6.</p><p class=\"paragraph\">#Math.round will make the random number round. With out this Math.round the result will look like&nbsp;<strong class=\"strong\">3.3751720403520498&nbsp;</strong>this. after using Math.round the number look like&nbsp;<strong class=\"strong\">3.&nbsp;</strong>You can use Math.ceil also.</p><img src=\"/Assets/Images/Blog/js-problem/dice.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\"><strong class=\"strong\">2.Find Bigger Number</strong></p><p class=\"paragraph\">You have three numbers. And you have to find the big number or the low number. So first you need to understand the logic. Simple, we will compare those numbers with others.</p><p class=\"paragraph\">## we will compare a and b (a&gt;b) if it&rsquo;s true then we will compare a with c (a&gt;c) if it&rsquo;s also true then we will determine that a is bigger. or if tis false then we will determine that b is bigger.</p>    <p class=\"paragraph\">## Determine the first step was wrong then, start from the beginning. We will compare a and b(a&gt;b) it&rsquo;s false then we will compare b with c (b&gt;C) if it is true then c is bigger. otherwise b is bigger.</p><img src=\"/Assets/Images/Blog/js-problem/findMax.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\">Or we can solve this problem with JavaScript Math object. We will use Math.max object then we can also find the max value. Follow the code bellow:</p><img src=\"/Assets/Images/Blog/js-problem/maxJs.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\" ><strong class=\"strong\">3.Factorial Number</strong></p> <p class=\"paragraph\" >Now we find the answer to a factorial number. If the user gives us a number to find the factorial value, we will show the answer in output. We use for loop to solve this problem. SO what is a factorial number?<br>Factorial, in mathematics, the result of all positive integers not exactly or equivalent to a given positive integer and signified by that integer and a shout point. Along these lines, factorial seven is written 5!, which means 1 &times; 2 &times; 3 &times; 4 &times; 5 Factorial zero is characterized as equivalent to 1. We use a function called factorial, a for loop.</p><img src=\"/Assets/Images/Blog/js-problem/factorialJS.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\" ><strong class=\"strong\">4.Factorial Number With Recursive Function</strong></p><p class=\"paragraph\" >if we see this image we see the formula of factorial. And with this way we can find the factorial number of any number. In this formula we see that a random number, imagine this number is &ldquo;n&rdquo; . The factorial of any number is that number occasions the factorial of (that number minus 1).<br>So, 5*(5&ndash;1)*(5&ndash;2)*(5&ndash;3)*(5&ndash;4) = 120.</p><img src=\"/Assets/Images/Blog/js-problem/recursive.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\" ><strong class=\"strong\">5.Reverse String</strong></p><p class=\"paragraph\" >A few months ago I meet two twin brothers. And I noticed that when they talk with each other they use some horrible language. That&rsquo;s not Bengali, not English, or any other language. With a very curious mind, I asked them which type of language they used while talking. They completely avoid that topic. After a few week, I catch their formula to communicate. And I realize that they reversing their word while talking. Like &ldquo;Hello Sir&rdquo; they say &ldquo;riS olleH&rdquo;. Kinde interesting. We can do this in programming. Just we use twin brother formula. &ldquo;Reverse The String&rdquo;.</p><img src=\"/Assets/Images/Blog/js-problem/reverse.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\" ><strong class=\"strong\">6.Who is Elder?</strong></p><p class=\"paragraph\" >Suppose we have an array containing a few people&rsquo;s age. Now We have to find the oldest one. We will use for loop again to solve this problem.</p><img src=\"/Assets/Images/Blog/js-problem/elder.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\" ><strong class=\"strong\">7.Sum of all number in array</strong></p><p class=\"paragraph\" >We have an array full of some random number. We will find the sum of all this numbers in array.</p><img src=\"/Assets/Images/Blog/js-problem/sum.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\" >We use a function called getArraySum. Using a for loop. The initial value will 0, and this loop will go through whole array. The initial value will increase 1 in every execution. After every execution the number will store element variable. and after storing the value of array, it will add with previously stored number. This process will continue until the array end.</p><p class=\"paragraph\" ><strong class=\"strong\">8.Swap the value</strong></p><p class=\"paragraph\" >We have two bowl full of food. Now Our target is transfer the food bowl. Means, food in bowl A will go to bowl B, and food in bowl B will go to bowl A. We can&rsquo;t do this transformation without a third bowl. So, we have bowl C. First, we take food of bowl A and move it to bowl C. Then, we move food of bowl B to bowl A. Now bowl B is empty, and then move food bowl of C to bowl B. Finally the food swap this successfully done. Here bowl C is temp variable.</p><img src=\"/Assets/Images/Blog/js-problem/swap.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\" ><strong class=\"strong\">9.Fibonacci Sequence</strong></p><p class=\"paragraph\" >The Fibonacci sequence is a progression of numbers where a number is the expansion of the last two numbers, beginning with 0, and 1.</p> <p class=\"paragraph\" >Fibonacci Sequence: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55&hellip;</p> <p class=\"paragraph\" >the expression is:&nbsp;<strong class=\"strong\">Xn = Xn-1 + Xn-2</strong></p><img src=\"/Assets/Images/Blog/js-problem/fibo.png\" style=\"max-width:462px; width:100%\"><p class=\"paragraph\" ><strong class=\"strong\">10.Foot to Mile Conversion</strong></p> <p class=\"paragraph\" >We know that,</p><p class=\"paragraph\" >1 foot = 0.000189394 mile. So we will build a program that give us a result that foot to mile.</p><img src=\"/Assets/Images/Blog/js-problem/footmile.png\" style=\"max-width:462px; width:100%\">"
  },
  {
    "id": 5,
    "title": "An Introduction to Flexbox in CSS: Understanding the Basics of Flexible Box Layout",
    "imgUrl": "/Assets/Images/Blog/flexbox.png",
    "tags": "css",
    "time": "to be announced",
    "date": "coming soon",
    "link": "an-introduction-to-flexbox-in-css-understanding-the-basics-of-flexible-box-layout",
    "details": "<p><em>A fresh perspective is on the horizon, hold on for an amazing article!</em></p>"
  },
  {
    "id": 6,
    "title": "Deploying on Netlify: A Comprehensive Guide line",
    "imgUrl": "/Assets/Images/Blog/netlify.png",
    "tags": "deployment",
    "time": "to be announced",
    "date": "coming soon",
    "link": "deploying-on-netlify-a-comprehensive-guide-line",
    "details": "<p><em>A fresh perspective is on the horizon, hold on for an amazing article!</em></p>"
  }
]
